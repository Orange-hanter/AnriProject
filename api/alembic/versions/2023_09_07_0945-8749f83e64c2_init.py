"""Init

Revision ID: 8749f83e64c2
Revises:
Create Date: 2023-09-07 09:45:25.103175

"""
from typing import Sequence, Union

import fastapi_users_db_sqlalchemy
import sqlalchemy_file
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8749f83e64c2"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "product_photos",
        sa.Column("photo", sqlalchemy_file.types.ImageField(), nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "products",
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("code", sa.String(length=128), nullable=False),
        sa.Column("group", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=128), nullable=False),
        sa.Column("photo_id", sa.UUID(), nullable=False),
        sa.Column("quantity_in_stock", sa.Integer(), nullable=False),
        sa.Column("price", sa.DECIMAL(), nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["photo_id"],
            ["products.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "tags",
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "user",
        sa.Column("id", fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "product_tags",
        sa.Column("product_uuid", sa.UUID(), nullable=False),
        sa.Column("tag_uuid", sa.UUID(), nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_uuid"],
            ["products.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_uuid"],
            ["tags.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("product_tags")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_table("tags")
    op.drop_table("products")
    op.drop_table("product_photos")
    # ### end Alembic commands ###
